q()
a<-available.packages()
head(rownames(a),3)
install.packages(c("slidify", "ggplot2", "devtools"))
install.packages("KernSmooth")
find.package(KernSmooth)
find.package("KernSmooth")
load(KernSmooth)
library(KernSmooth)
clear
dir()
dir()
getwd()
print(?mtcars)
?mtcars
?mtcars
?summary
fit <- lm(mpg ~ am, data=mtcars)
summary(fit)$r
summary(fit)
summary(fit)$adj.r.squared
install.packages("randomForest")
knit_with_parameters('~/Coursera/practical_machine_learning/course_project/exercise_prediction_report.Rmd')
?featurePlot
library(caret)
?featurePlot
test <- read.csv(https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv, na.strings=c("NA","#DIV/0!",""))
test <- read.csv("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv", na.strings=c("NA","#DIV/0!",""))
test[,-(1:7)]
test <- test[,-(1:7)]
test <- test[,!(colSums(is.na(test)) > 0)]
test <- test[, -nearZeroVar(test)]
test[, which(names(test) == "classe")]
test <- read.csv("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv", na.strings=c("NA","#DIV/0!",""))
test <- test[,-(1:7)]
test <- test[,!(colSums(is.na(test)) > 0)]
test <- test[, -nearZeroVar(test)]
test
test <- read.csv("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv", na.strings=c("NA","#DIV/0!",""))
test <- test[,-(1:7)]
test <- test[, -nearZeroVar(test)]
test <- test[,!(colSums(is.na(test)) > 0)]
test[, which(names(test) == "classe")]
test[, !which(names(test) == "classe")]
test[, -which(names(test) == "classe")]
setwd('./Coursera/data_products/course_project/')
install.packages('rsconnect')
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
rsconnect::setAccountInfo(name='slice-coursera', token='F52A9A040C9123B834515F9B85F2E7C1', secret='/l2kc3JQBsjO/zPiZXbH1n/iEAxE3BkvWFWjbSKH')
library(rsconnect)
rsconnect::deployApp('./data_prediction/')
rsconnect::deployApp('./data_prediction')
data(mtcars)
max(mtcars$wt)
avg(mtcars)
avg(mtcars$wt)
mean(mtcars$wt)
shiny::runApp('data_prediction')
runApp('data_prediction')
runApp('data_prediction')
runApp('data_prediction')
runApp('data_prediction')
runApp('data_prediction')
modelFit2 <- lm(mpg ~ wt, data=mtcars)
predict(modelFit2, x = 3)
predict(modelFit2, newdata = 3)
runApp('data_prediction')
runApp('data_prediction')
runApp('data_prediction')
runApp('data_prediction')
predict(modelFit2, newdata = data.frame(wt=3))
predict(modelFit2, newdata = data.frame(wt=3))[1]
predict(modelFit2, newdata = data.frame(wt=3))[,]
type(predict(modelFit2, newdata = data.frame(wt=3)))
predict(modelFit2, newdata = data.frame(wt=3))
typeof(predict(modelFit2, newdata = data.frame(wt=3)))
val <- predict(modelFit2, newdata = data.frame(wt=3))
val[[0]]
val[[1]]
runApp('data_prediction')
runApp('data_prediction')
runApp('data_prediction')
rsconnect::deployApp('./data_prediction', appName = 'MPG prediction')
rsconnect::deployApp('./data_prediction')
runApp('data_products/shiny_app')
install.packages('devtools')
library(devtools)
install_github('slidify')
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
setwd('data_products/')
ls
ls()
author("shiny_app_presentation")
